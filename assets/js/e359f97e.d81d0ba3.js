"use strict";(self.webpackChunkfaunty=self.webpackChunkfaunty||[]).push([[5918],{7858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"User Interface/responsive-platform","title":"Responsive & platform notes","description":"This document outlines the responsive design priorities and testing guidelines for Faunty, since the project is primarily developed and tested as a web application with a smartphone-first focus.","source":"@site/docs/User Interface/09-responsive-platform.md","sourceDirName":"User Interface","slug":"/User Interface/responsive-platform","permalink":"/Faunty/docs/User Interface/responsive-platform","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/User Interface/09-responsive-platform.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Screen spec","permalink":"/Faunty/docs/User Interface/screen-spec"},"next":{"title":"Getting Started","permalink":"/Faunty/docs/getting-started"}}');var r=t(4848),i=t(8453);const o={},a="Responsive & platform notes",c={},l=[];function d(e){const n={h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"responsive--platform-notes",children:"Responsive & platform notes"})}),"\n",(0,r.jsx)(n.p,{children:"This document outlines the responsive design priorities and testing guidelines for Faunty, since the project is primarily developed and tested as a web application with a smartphone-first focus."}),"\n",(0,r.jsx)(n.p,{children:"Key points"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Primary target: smartphone users (mobile web). Design, QA and bug fixes prioritise the phone experience."}),"\n",(0,r.jsx)(n.li,{children:"Debugging baseline: assume a minimum viewport width of 375px. Make sure core flows, navigation and content fit and are usable at that width."}),"\n",(0,r.jsx)(n.li,{children:"Secondary targets: tablet and desktop are supported where practical, but they are lower priority and should not block releases."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Guidance for developers and QA"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep touch-first ergonomics in mind: hit targets, spacing and scroll behaviour should work on touch devices."}),"\n",(0,r.jsx)(n.li,{children:"Ensure readable font sizes and avoid horizontal scrolling. Prefer vertical stacking over complex multi-column layouts at this size."}),"\n",(0,r.jsx)(n.li,{children:"For web-specific affordances (hover, keyboard focus), implement them where convenient but do not rely on them for core flows that must work on phones."}),"\n",(0,r.jsx)(n.li,{children:"Collapse side navigation into a bottom navigation or drawer on small screens. Reserve multi-column grids and dense layouts for wider viewports."}),"\n",(0,r.jsx)(n.li,{children:"Accessibility: keep keyboard navigation and focus order logical; provide visible focus styles for keyboard users on web."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);